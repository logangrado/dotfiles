# Source any extra zsh configs
for CONFIG in $(find ~ -maxdepth 1 -name ".zshrc-*"); do
    source $CONFIG
done

# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# PATH
#=========================================================
export PATH=/usr/local/sbin:$PATH         # Homebrew sbin
export PATH=$HOME/.dotfiles/bin:$PATH     # Personal bin
export PATH=$HOME/venvs/bin:$PATH         # bins for isolated venv installs of packages
export PATH=$HOME/.local/bin:$PATH        # pipx bin location
export PATH=$HOME/.poetry/bin:$PATH       # Poetry path
export PATH=$HOME/.emacs.d/bin:$PATH      # DOOM emacs

# PYENV Configuration
#=====================================================
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init --path)"
eval "$(pyenv init -)"

# Set ZSH 
#=========================================================
# zsh env variables
ZSH_THEME="grado"

# zsh themes
plugins=(git)
unsetopt AUTO_CD  # Don't cd w/o `cd`

# source zsh
source $ZSH/oh-my-zsh.sh

# Make ls colors work properly
unset LSCOLORS

# Emacs and Editor vars
#======================================================
export EDITOR="emacs -nw"
alias emacs=$EDITOR
source $HOME/.dotfiles/zsh/emacsd.sh

# ALIASES
#======================================================

alias ls='ls -CFG'
alias lsa='ls -CFGa'
alias del='rmtrash'
alias g++='g++ -std=c++11'

#python aliases
#alias python='python3'
#alias pip='pip3'
#alias ipython='ipython3'
#alias pylab='ipython3 --pylab'

#git aliases
alias grm='git ls-files --deleted -z | xargs -0 git rm'
alias gf='git fetch --all --prune'
alias gh="cd $(git rev-parse --show-toplevel)"

# git log, but just show current branch, master, and dev (if they exist, and their remotes)
alias gitlog='git log $($HOME/.dotfiles/scripts/get_remotes master dev HEAD) --graph --color --decorate --first-parent -m'
# git log, but just show current branch, master, and dev (if they exist, and their remotes)
alias gitlog-full='git log $($HOME/.dotfiles/scripts/get_remotes master dev HEAD)  --graph --color --decorate'
alias gitlogall='git log  --graph --branches --all --color --decorate --first-parent -m'
alias gitlogall-full='git log  --graph --branches --all --color --decorate'
alias gl="gitlog"
alias glf="gitlog-full"
alias gla="gitlogall"
alias glaf="gitlogall-full"
alias gcm='git commit -m'
alias gca='git commit --amend'
alias gcan='git commit --amend --no-edit'

#google cloud
alias gci="gcloud compute instances"

setopt nosharehistory                 # Prevent command history from being shared within windows
# These lines prevent command-matching when moving through command history
bindkey "\eOA" up-line-or-history    
bindkey "\eOB" down-line-or-history

bindkey "^[i" up-line-or-history
bindkey "^[k" down-line-or-history
bindkey "^[l" forward-char
bindkey "^[j" backward-char
bindkey "^[o" forward-word
bindkey "^[u" backward-word


# This fixes the issue where the return key doesn't work on some OS's
# Somehow return stops sending the ^M code, and sends this instead
# So we just set zsh to accept that as return
bindkey '^[OM' accept-line

# SOURCING
#======================================================
# source all files in .dotfiles/scripts
for f in $HOME/.dotfiles/scripts/*.sh; do
    source $f
done

# OS-Specific Config
#======================================================
unameOut="$(uname -s)"
case "${unameOut}" in
    Linux*)        
        alias ls='ls -CFG --color'
        DIST=$(cat /etc/*-release)
        if echo $DIST | grep -q debian; then
            export LS_COLORS="$LS_COLORS:ow=1;34:tw=1;34:"
        fi
        ;;
    Darwin*) ;;
    CYGWIN*)
        alias ls='ls -CFG --color'
        ;;
    MINGW*)  ;;
esac
    
# Computer specific config
#======================================================
case $HOST in
    "rpic_00")
        export CLUSTER_HOME=~/rpi-cluster
        PATH=$PATH:$CLUSTER_HOME/bin
        ;;
    "grado_mpb")
        # MSI aliases
        alias msi='ssh msi'
        alias mesabi='ssh msi -t ssh mesabi'
        alias itasca='ssh msi -t ssh itasca'
        alias msilab='ssh msi -t ssh lab'
esac
# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/grado/Applications/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/grado/Applications/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/grado/Applications/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/grado/Applications/google-cloud-sdk/completion.zsh.inc'; fi
[[ :$PATH: == *:$HOME/bin:* ]] || PATH=$HOME/bin:$PATH